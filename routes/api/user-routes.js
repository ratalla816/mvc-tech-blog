const router=require("express").Router(),_require=require("../../models"),User=_require.User;router.get("/",function(e,s){User.findAll({attributes:{exclude:["password"]}}).then(function(e){return s.json(e)}).catch(function(e){console.log(e),s.status(500).json(e)}),router.get("/:id",function(e,s){User.findOne({attributes:{exclude:["password"]},where:{id:e.params.id}}).then(function(e){e?s.json(e):s.status(404).json({message:"user not found"})}).catch(function(e){console.log(e),s.status(500).json(e)})}),router.post("/",function(e,s){User.create({username:e.body.username,password:e.body.password,email:e.body.email}).then(function(e){return s.json(e)}).catch(function(e){console.log(e),s.status(500).json(e)})}),router.post("/login",function(e,s){User.findOne({where:{email:e.body.email}}).then(function(o){if(!o)return void s.status(400).json({message:"user not found"});o.checkPassword(e.body.password)?s.json({user:o,message:"user logged in"}):s.status(400).json({message:"invalid password"})})}),router.put("/:id",function(e,s){User.update(e.body,{individualHooks:!0,where:{id:e.params.id}}).then(function(e){e[0]?s.json(e):s.status(404).json({message:"user not found"})})}).catch(function(e){console.log(e),s.status(500).json(e)})}),router.delete("/:id",function(e,s){User.destroy({where:{id:e.params.id}}).then(function(e){e?s.json(e):s.status(404).json({message:"user not found"})}).catch(function(e){console.log(e),s.status(500).json(e)})}),module.exports=router;